builder:
  track: dev

labels:
  type: service
  app-group: ziplinee-ci
  team: zipline-team
  language: golang

version:
  semver:
    major: 1
    minor: 5
    patch: 5

stages:
  continues-integration:
    parallelStages:
      ci-api:
        image: ziplineeci/ziplinee-ci-api-cache
        env:
          CGO_ENABLED: 0
          GOGC: off
          GOOS: linux
        commands:
          - golangci-lint run --timeout 3m
          - CGO_ENABLED=1 go test -short -race ./...
          - go build -ldflags "-X main.appgroup=${ZIPLINEE_LABEL_APP_GROUP} -X main.app=${ZIPLINEE_GIT_NAME} -X main.version=${ZIPLINEE_BUILD_VERSION} -X main.revision=${ZIPLINEE_GIT_REVISION} -X main.branch=${ZIPLINEE_GIT_BRANCH} -X main.buildDate=${ZIPLINEE_BUILD_DATETIME}" -o ./publish/${ZIPLINEE_GIT_NAME} .


#  integration-tests/db-integration:
#    image: ziplineeci/ziplinee-ci-api-cache
#    env:
#      GOGC: off
#      DB_HOST: cockroachdb
#      DB_DATABASE: defaultdb
#      DB_INSECURE: true
#      DB_PORT: 26257
#      DB_USER: root
#      DB_PASSWORD: ''
#    commands:
#    - go test -run TestIntegration ./...

  bake:
    image: extensionci/docker:dev
    action: build
    severity: unknown
    repositories:
    - ziplineeci
    path: .
    copy:
    - /etc/ssl/certs/ca-certificates.crt

  push-to-docker-hub:
    image: extensionci/docker:dev
    action: push
    repositories:
    - ziplineeci

  tag-revision:
    image: bitnami/git
    commands:
    - git tag ${ZIPLINEE_BUILD_VERSION}
    - git push origin ${ZIPLINEE_BUILD_VERSION}
    when: status == 'succeeded' &&
      branch == 'main'

  slack-notify:
    image: extensionci/slack-build-status:dev
    workspace: ziplineeci
    channels:
    - '#build-status'
    when: status == 'succeeded' ||
      status == 'failed'
